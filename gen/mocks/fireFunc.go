// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	logrus "github.com/sirupsen/logrus"
	mock "github.com/stretchr/testify/mock"
)

// FireFunc is an autogenerated mock type for the fireFunc type
type FireFunc struct {
	mock.Mock
}

// Execute provides a mock function with given fields: _a0
func (_m *FireFunc) Execute(_a0 *logrus.Entry) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*logrus.Entry) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewFireFunc interface {
	mock.TestingT
	Cleanup(func())
}

// NewFireFunc creates a new instance of FireFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewFireFunc(t mockConstructorTestingTNewFireFunc) *FireFunc {
	mock := &FireFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
